import { html, unsafeCSS } from 'lit';
import { property } from 'lit/decorators.js';
import { ALElement } from '../ALElement';
import styles from './{{dashCase name}}.scss';

/**
 * Component: al-{{dashCase name}}
 * - **slot**: The component content
 */
export class AL{{pascalCase name}} extends ALElement {
  static el = 'al-{{dashCase name}}';

  static get styles() {
    return unsafeCSS(styles.toString());
  }

  render() {
    const componentClassNames = this.componentClassNames('al-c-{{dashCase name}}', { });

    return html`
      <div class="${componentClassNames}">
        <slot></slot>
      </div>
    `;
  }
}

if ((globalThis as any).alAutoRegistry === true && customElements.get(AL{{pascalCase name}}.el) === undefined) {
  customElements.define(AL{{pascalCase name}}.el, AL{{pascalCase name}});
}

declare global {
  interface HTMLElementTagNameMap {
    'al-{{dashCase name}}': AL{{pascalCase name}};
  }
}
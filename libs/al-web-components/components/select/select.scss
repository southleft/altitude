@import '../../styles/component';
/* ------------------------------------*\
  #SELECT
\*------------------------------------ */

:host {
  display: contents;
}

/**
 * Select
 */
.al-c-select {
  display: flex;
  flex-direction: column;
  gap: var(--al-theme-space-xxs);
  width: 100%;
  min-width: max-content;
}

/**
 * Select container
 */
.al-c-select__container {
  position: relative;
}

/**
 * Select arrow
 */
.al-c-select__icon-arrow {
  transition: transform var(--al-theme-animation-duration) var(--al-theme-animation-timing);
  transform: rotate(0);
  transform-origin: center;

  /**
   * If the select is active, rotate the arrow
   */
  .al-is-active-select & {
    transform: rotate(180deg);
  }
}

/**
 * Select value
 * 1. Positions the dropdown panel absolute to the select
 */
.al-c-select__panel {
  position: absolute;
  inset-block-start: calc(100% + var(--al-theme-space-xxxs));
  inset-inline-start: 0;
  width: 100%;
  z-index: var(--al-z-index-400);

  /**
   * Open the dropdown panel above the input field
   */
  .al-c-select--align-top & {
    inset-block-start: auto;
    inset-block-end: calc(100% + var(--al-theme-space-xs));
  }
}

/**
 * Select field note slotted
 * 1. Targets field notes that are added via a slot
 */
slot[name="field-note"]::slotted(*),
slot[name="error"]::slotted(*) {
  /**
   * Field note with error state
   * 1. Ensures the error styles are still applied even if a slotted field note does not have ?isError applied
   */
  .al-is-error & {
    --al-field-note-color: var(--al-theme-color-border-danger-default);
  }

  /**
   * Field note with disabled state
   * 1. Ensures the disabled styles are still applied even if a slotted field note does not have ?isDisabled applied
   */
  .al-is-disabled & {
    opacity: var(--al-theme-opacity-disabled);
  }
}

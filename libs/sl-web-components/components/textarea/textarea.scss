@import '../../styles/component';
/*------------------------------------*\
  #TEXTAREA
\*------------------------------------*/

/**
 * Textarea
 */
.sl-c-textarea {
  display: flex;
  flex-direction: column;
  gap: size(0.5);
}

/**
 * Textarea container
 * - Holds the textarea element and label
 */
.sl-c-textarea__container {
  position: relative;
  display: flex;
  flex-direction: column;
}

/**
 * Textarea element
 * - The actual textarea element of the text field
 */
.sl-c-textarea__input {
  @include input-styles;
  padding-inline-start: var(--sl-textarea-padding-start, size(2));
  padding-inline-end: var(--sl-textarea-padding-end, size(2));

  /**
   * Show the placeholder if the label is hidden
   */
  .sl-has-hidden-label & {
    &::placeholder {
      opacity: 1;
      visibility: visible;
    }
  }

  /**
   * Hide the placeholder by default because the label appears in it's place
   */
  &::placeholder {
    opacity: 0;
    visibility: hidden;
  }
}

/**
 * Textarea label
 * - The floating label that appears inside of the textarea
 */
.sl-c-textarea__label {
  @include label-styles;
  position: absolute;
  inset-block-start: size(1.5);
  inset-inline-start: var(--sl-textarea-padding-start, size(2));
  display: flex;
  align-items: center;
  gap: size(0.5);
  pointer-events: none; /* Allows hover to work properly */

  /**
   * If the textarea is focused or active, position the label above the textarea
   */
  .sl-c-textarea__input:focus + &,
  .sl-is-active & {
    @include sl-theme-typography-body-xs;
    padding: 0 size(0.5);
    background-color: var(--sl-text-textarea-background, var(--sl-theme-color-background-default-weak));
    inset-block-start: size(-1.25);
    inset-block-end: auto;
    inset-inline-start: size(1.5);
  }

  /**
   * A fix for the textarea border being visible through the label when filled and disabled
   */
  .sl-c-textarea__input:disabled + & {
    opacity: 1;

    /**
     * Applied the opacity to the text only in the label
     */
    span {
      opacity: var(--sl-theme-opacity-disabled);
    }

    /**
     * Prevents the textarea border from showing through the label
     */
    &::before {
      background-color: var(--sl-text-textarea-background, var(--sl-theme-color-background-default-weak));
      content: "";
      display: block;
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      margin: auto;
      z-index: -1;
      width: 100%;
      height: 80%;
    }
  }
}

/**
 * Textarea optional
 * - The `(Optional)` text that appears in the label if isOptional is true
 */
.sl-c-textarea__optional {
  @include sl-theme-typography-body-xs;
}

/**
 * Textarea footer
 * - The container that holds the field notes and max length
 */
.sl-c-textarea__footer {
  display: flex;
  gap: size(2);
}

/**
 * Textarea field notes
 * - The container that holds the field notes
 */
.sl-c-textarea__field-notes {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: size(0.5);
}

/**
 * Textarea slot before and after
 * - The slots for icons or prefix/suffix text inside the textarea field
 */
.sl-c-textarea__before,
.sl-c-textarea__after {
  display: flex;
  align-items: center;
  gap: size(0.5);
  position: absolute;
  inset-block-start: size(1.5);
  --sl-icon-height: size(2.5);
  --sl-icon-width: size(2.5);
  pointer-events: none; /* Allows hover to work properly */
}

/**
 * Textarea slot before
 * - The slot for elements positioned absolutely to the left of the textarea
 */
.sl-c-textarea__before {
  inset-inline-start: size(2);
}

/**
 * Textarea slot after
 * - The slot for elements positioned absolutely to the right of the textarea
 */
.sl-c-textarea__after {
  inset-inline-end: size(2);
}

/**
 * Textarea asterick
 * - The asterick that displays if the field is required
 */
.sl-c-textarea__asterisk {
  color: var(--sl-theme-color-border-danger-default);
}

/**
 * Textarea slots
 * - Adds spacing between multiple items slotted
 */
slot[name="before"],
slot[name="after"] {
  display: flex;
  gap: size(0.5);
}

/**
 * Textarea note slotted
 * 1. Targets field notes that are added via a slot
 */
slot[name="field-note"]::slotted(*),
slot[name="error"]::slotted(*) {
  /**
   * Field note with error state
   * 1. Ensures the error styles are still applied even if a slotted field note does not have ?isError applied
   */
  .sl-is-error & {
    --sl-field-note-color: var(--sl-theme-color-border-danger-default);
  }

  /**
   * Field note with disabled state
   * 1. Ensures the disabled styles are still applied even if a slotted field note does not have ?isDisabled applied
   */
  .sl-is-disabled & {
    opacity: var(--sl-theme-opacity-disabled);
  }
}

@import '../../styles/component';
/*------------------------------------*\
  #SLIDER
\*------------------------------------*/

/**
 * 1) Slider is an input range that can have
 * 1 slider value, 2 slider values (range),
 */
 :host {
  --sl-slider-thumb-size: #{size(3)};
  --sl-slider-track-height: 0.25rem;
}

.sl-c-slider {
  display: flex;
  flex-direction: column;
  gap: var(--sl-theme-space-xxs);
}

/**
 * Container wrapping input and label
 */
.sl-c-slider__tooltip-container {
  position: relative;
}

/**
 * Styling for default slider
 */
.sl-c-slider__input {
  background: linear-gradient(
    var(--rtlGradientToRight, 90deg),
    var(--sl-theme-color-background-default-strong) 0%,
    var(--sl-theme-color-background-default-strong) 40%,
    var(--sl-theme-color-background-default-strong) 40%,
    var(--sl-theme-color-background-default-strong) 100%
  );
  border-radius: var(--sl-theme-border-radius);
  height: var(--sl-slider-track-height);
  width: 100%;
  outline: none;
  transition: background 450ms ease-in;
  appearance: none;

  /**
   * Styling for track on slider
   */
  &::-webkit-slider-runnable-track {
    width: 100%;
    height: var(--sl-slider-track-height);
    border-radius: var(--sl-theme-border-radius);
    border: none;
  }

  /**
   * Disabled state for track on slider
   */
  &:disabled::-webkit-slider-runnable-track {
    background-color: var(--sl-theme-color-background-default-strong);
  }

  /**
   * Handle styling on slider
   */
  &::-webkit-slider-thumb {
    border: none;
    width: var(--sl-slider-thumb-size);
    height: var(--sl-slider-thumb-size);
    border-radius: 50%;
    background-color: var(--sl-theme-color-background-inverse-default);
    appearance: none;
    margin-block-start: calc(var(--sl-slider-thumb-size) / -2 + var(--sl-slider-track-height) / 2);
    cursor: grab;

    /**
     *  Styling and positiioning on thumb for dual range
     */
    .sl-c-slider__range & {
      position: relative;
      z-index: var(--sl-z-index-100);
      appearance: none;
      pointer-events: all;
    }
  }

  /**
   * Disabled state on handle on slider
   */
  &:disabled::-webkit-slider-thumb {
    background-color: var(--sl-theme-color-content-tertiary);
    cursor: not-allowed;
  }

  /**
   * disabled Active state on handle
   */
  &:disabled::-webkit-slider-thumb:active {
    outline: none;
  }

  /**
   * Hover state on handle
   */
  &:enabled::-webkit-slider-thumb:hover {
    background-color: var(--sl-theme-color-background-inverse-default);
  }

  /**
   * Active state on handle
   */
  &:active::-webkit-slider-thumb {
    @include focus;
  }

  /**
   * Focus state on handle
   */
  &:enabled:focus-visible::-webkit-slider-thumb {
    @include focus;
  }

  /**
   * Active state on handle
   */
  &:enabled::-webkit-slider-thumb:active {
    background-color: var(--sl-theme-color-background-inverse-default);
    cursor: grabbing;
    outline: none;
  }

  &.sl-c-slider-output-active {
    &::-webkit-slider-thumb {
      background-color: var(--sl-theme-color-background-inverse-default);
      cursor: grabbing;
      outline: none;
    }
  }

  /**
   * Firefox specific styling
   */
  &::-moz-focus-outer {
    border: 0;
  }

  /**
   * Targets the progress track on the input slider
   */
  &::-moz-range-progress {
    background-color: var(--sl-theme-color-background-accent-default);
    border-radius: var(--sl-theme-border-radius);
    height: var(--sl-slider-track-height);
  }

  /**
   * Targets the track on the input slider
   */
  &::-moz-range-track {
    width: 100%;
    height: var(--sl-slider-track-height);
    background-color: var(--sl-theme-color-background-default-strong);
    border-radius: var(--sl-theme-border-radius);
    border: none;
  }

  /**
   * Targets the handle on the input slider
   */
  &::-moz-range-thumb {
    height: var(--sl-slider-thumb-size);
    width: var(--sl-slider-thumb-size);
    border-radius: 50%;
    background-color: var(--sl-theme-color-background-inverse-default);
    border: none;
    cursor: pointer;
  }

  /**
   * Applies hover state to the handle on the input slider
   */
  &:enabled::-moz-range-thumb:hover {
    background-color: var(--sl-theme-color-background-inverse-default);
  }

  /**
   * Active state to the handle
   */
  &:active::-moz-range-thumb {
    @include focus;
  }

  /**
   * Applies focus state to the handle on the input slider
   */
  &:enabled:focus-visible::-moz-range-thumb {
    @include focus;
  }

  /**
   * Applies active state to the handle on the input slider
   */
  &:enabled::-moz-range-thumb:active {
    background-color: var(--sl-theme-color-background-inverse-default);
    cursor: grabbing;
    outline: none;
  }
}

/**
 * disabled state styling for range slider
 */
.sl-is-disabled {
  opacity: var(--sl-theme-opacity-disabled);
  cursor: not-allowed;
}

.sl-c-slider__output-range-one,
.sl-c-slider__output-range-two {
  @include input-styles;
  min-width: size(7);
  width: max-content;
}

/**
 * Slider range label that depicts current value
 */
.sl-c-slider__tooltip-wrapper,
.sl-c-slider__range-one-label-container,
.sl-c-slider__range-two-label-container {
  position: absolute;
  inset-block-end: size(3.125);
  transform: translateX(var(--rtlTranslateX, -50%));
  text-align: start;
  overflow: visible;
  min-width: size(3.75);
  width: max-content;
  z-index: var(--sl-z-index-top);
  background-color: var(--sl-theme-color-background-default-strong);
  border-radius: var(--sl-theme-border-radius);
  color: var(--sl-theme-color-content-default);
  box-shadow: var(--sl-theme-box-shadow);
  margin-block-end: size(0.75);
  font-size: var(--sl-theme-space-sm);
  line-height: size(2);

  &:after {
    content: '';
    display: block;
    position: absolute;
    inset-block-end: calc(-1 * size(1.25) / 2);
    inset-inline-start: calc(50% - size(1.25) / 2);
    background-color: var(--sl-theme-color-background-default-strong);
    transform: rotate(45deg);
    width: size(1.25);
    height: size(1.25);
    box-shadow: var(--sl-theme-box-shadow);
  }
}

.sl-c-slider__range-one-label-container,
.sl-c-slider__range-two-label-container {
  inset-block-end: size(2);
}

.sl-c-slider__tooltip,
.sl-c-slider__range-one-label,
.sl-c-slider__range-two-label {
  display: block;
  background-color: var(--sl-theme-color-background-default-strong);
  border-radius: var(--sl-theme-border-radius);
  padding: var(--sl-theme-space-xs);
  position: relative;
  z-index: var(--sl-z-index-top);
  text-align: center;
}

.sl-c-slider__output-range-one-text,
.sl-c-slider__output-range-two-text {
  @include sl-theme-typography-body-xs;
  margin-block-start: var(--sl-theme-space-xxs);
}

/**
 * Applies flex to container to place input side by side
 */
.sl-c-slider__output-container,
.sl-c-slider__slot-container,
.sl-c-slider__range-container {
  display: flex;
  align-items: center;
  gap: var(--sl-theme-space);

  /**
   * Applies to make the slider as full width.
   */
  .sl-c-slider__tooltip-container {
    flex: 1;
  }
}

/**
 * Apply relative positioning on range container
 */
.sl-c-slider--range {
  position: relative;
}

/**
 * Double range slider container
 */
.sl-c-slider__range {
  position: relative;
  flex: 1 1 0%;

  /**
   * Input ranges for slider
   */
  .sl-c-slider__range-one,
  .sl-c-slider__range-two {
    position: absolute;
    appearance: none;
    width: 100%;
    height: var(--sl-slider-track-height);
    background-color: var(--sl-theme-color-background-default-strong);
    border-radius: var(--sl-theme-border-radius);
    margin: 0;
    border: 0;
    outline: none;
    pointer-events: none;

    /**
     * Thumb styling on dual range slider
     */
    &::-webkit-slider-thumb {
      position: relative;
      width: var(--sl-slider-thumb-size);
      height: var(--sl-slider-thumb-size);
      border-radius: 50%;
      background-color: var(--sl-theme-color-background-inverse-default);
      z-index: var(--sl-z-index-200);
      cursor: pointer;
      appearance: none;
      pointer-events: all;
    }

    /**
     * Thumb styling on active state
     */
    &:active::-webkit-slider-thumb {
      z-index: var(--sl-z-index-500);
      @include focus;
    }

    /**
     * Thumb styling on focus state
     */
    &:enabled:focus-visible::-webkit-slider-thumb {
      @include focus;

      background-color: var(--sl-theme-color-background-inverse-default);
    }

    /**
     * Applies hover state to the handle on the double range slider
     */
    &:enabled::-webkit-slider-thumb:hover {
      background-color: var(--sl-theme-color-background-inverse-default);
    }

    /**
     * Active state on handle
     */
    &:enabled::-webkit-slider-thumb:active {
      outline: none;
      background-color: var(--sl-theme-color-background-inverse-default);
    }

    /**
     * Thumb styling for firefox
     */
    &::-moz-range-thumb {
      position: relative;
      z-index: var(--sl-z-index-100);
      width: var(--sl-slider-thumb-size);
      height: var(--sl-slider-thumb-size);
      border-radius: 50%;
      background-color: var(--sl-theme-color-background-inverse-default);
      appearance: none;
      pointer-events: all;
    }

    /**
     * Active state for thumb on firefox
     */
    &:active::-moz-range-thumb {
      @include focus;
    }

    /**
     * Thumb styling on focus state for firefox
     */
    &:enabled:focus-visible::-moz-range-thumb {
      @include focus;
    }

    /**
     * Applies hover state to the handle on the double range slider
     */
    &:enabled::-moz-range-thumb:hover {
      background-color: var(--sl-theme-color-background-inverse-default);
    }

    &::-ms-thumb {
      position: relative;
      z-index: var(--sl-z-index-200);
      width: var(--sl-slider-thumb-size);
      height: var(--sl-slider-thumb-size);
      border-radius: 50%;
      background-color: var(--sl-theme-color-background-inverse-default);
      cursor: pointer;
      appearance: none;
      pointer-events: all;
    }

    &::-ms-track {
      width: 100%;
      cursor: pointer;

      /* Hides the slider so custom styles can be added */
      background: transparent;
      border-color: transparent;
      color: transparent;
    }

    &::-ms-fill-lower {
      background: var(--sl-theme-color-background-accent-default);
      border-radius: 50%;
    }
  }
}

.sl-c-slider__range-lower-active-thumb,
.sl-c-slider__range-upper-active-thumb {
  z-index: var(--sl-z-index-300);
}

/**
 * Double range slider color span
 */
.sl-c-slider__range-color {
  position: absolute;
  display: block;
  z-index: var(--sl-z-index-100);
  width: 100%;
  height: 0.25rem;
  background-color: var(--sl-theme-color-background-accent-default);
  border-radius: var(--sl-theme-border-radius);
}

/**
 * Apply input styles to output variant input
 */
.sl-c-slider__output {
  @include input-styles;
  min-width: size(7);
  width: max-content;
}

/**
 * Apply styles to label / heading part
 */
.sl-c-slider__label {
  @include label-styles;
  display: inline-block;

  .sl-c-slider--range &,
  .sl-has-tooltip & {
    padding-block-end: size(5);
  }

  .sl-c-slider--range.sl-has-output & {
    padding-block-end: size(2);
  }
}

/**
  * Apply styles to prefix and suffix values (which displays min and max)
  */
.sl-c-slider-prefix-text,
.sl-c-slider-suffix-text {
  color: var(--sl-theme-color-content-default);
}

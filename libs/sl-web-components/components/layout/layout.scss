@import '../../tokens/sl/component';
/* ------------------------------------*\
  #LAYOUT
\*------------------------------------ */

.sl-c-layout {
  display: grid;
  gap: size(2);
  grid-template-columns: repeat(1, 1fr);
}

/**
 * Layout gap none
 * 1. Remove the gap between items
 */
.sl-c-layout--gap-none {
  gap: 0;
}

/**
 * Layout gap none
 * 1. Shrink the gap to 8px between items
 */
.sl-c-layout--gap-sm {
  gap: size(1);
}

/**
 * Layout gap none
 * 1. Shrink the gap to 24px between items
 */
.sl-c-layout--gap-lg {
  gap: size(3);
}

/**
 * Layout gap xl
 * 1. Widen the gap to 32px between items
 */
.sl-c-layout--gap-xl {
  gap: size(4);
}

/**
 * Left sidebar layout
 * 1. Layout that is stacked on small screens and turns into a left sidebar with main
 * content to the right
 * 2. The main column stretches the full width minus the sidebar width and gap.
 *    The sidebar column has a minimum width value (enough to accommodate navigation
 *    and other sidebar content) but stretches to fit the content placed inside it.
 */
.sl-c-layout--sidebar-left {
  @media all and (min-width: $sl-bp-md) {
    grid-template-columns: calc(var(--sl-layout-sidebar-width, 40%) - (size(1))) minmax(0, 1fr); /* 2 */
  }
}

/**
 * Right sidebar layout
 * 1. Layout that is stacked on small screens and turns into a right sidebar with main
 * content to the left
 * 2. The main column stretches the full width minus the sidebar width and gap.
 *    The sidebar column has a minimum width value (enough to accommodate navigation
 *    and other sidebar content) but stretches to fit the content placed inside it.
 */
.sl-c-layout--sidebar-right {
  @media all and (min-width: $sl-bp-md) {
    grid-template-columns: minmax(0, 1fr) calc(var(--sl-layout-sidebar-width, 40%) - (size(1))); /* 2 */
  }
}

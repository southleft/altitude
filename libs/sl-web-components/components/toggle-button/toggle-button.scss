@import '../../styles/component';
/* ------------------------------------*\
  #TOGGLE-BUTTON
\*------------------------------------ */

/**
 * Toggle Button
 */
.sl-c-toggle-button {
  @include sl-theme-typography-body-sm;
  display: flex;
  padding: var(--sl-theme-space-xs);
  background: var(--sl-theme-color-background-transparent);
  border: none;
  border-radius: var(--sl-theme-border-radius-lg);
  text-decoration: none;
  cursor: pointer;
}

/**
 * Toggle Button - Background variant
 */
.sl-c-toggle-button--background {
  background-color: var(--sl-theme-color-background-default);
  box-shadow: var(--sl-theme-box-shadow-md);
}

/**
 * Toggle Button content
 */
.sl-c-toggle-button__content {
  display: flex;
  align-items: center;
  justify-content: var(--sl-toggle-button-justify-content, center);
  gap: var(--sl-theme-space-xs);
  height: size(5);
  min-width: size(5);
  width: var(--sl-toggle-button-content-width, auto);
  color: var(--sl-theme-color-content-default);
  background: var(--sl-theme-color-background-transparent);
  border-radius: var(--sl-theme-border-radius);
  padding: var(--sl-theme-space-xs);
  transition: color var(--sl-theme-animation-duration) var(--sl-theme-animation-timing), background-color var(--sl-theme-animation-duration) var(--sl-theme-animation-timing);
  white-space: nowrap;
  position: relative;

  /**
   * Remove padding for small variants
   */
  .sl-c-toggle-button--small & {
    padding: 0;
  }

  /**
   * Hover state
   * - If parent is hovered, then change the background color of the content
   */
  &:hover:not(:active, .sl-is-selected &) {
    background: var(--sl-theme-color-background-default-strong);
  }

  /**
   * Selected state
   * - If parent has selected state, then change the background & color of the content
   */
  .sl-is-selected & {
    color: var(--sl-theme-color-content-default-weak);
    background: var(--sl-theme-color-background-default-stronger);
  }

  /**
   * Overlay for click events on content
   */
  &::after {
    content: "";
    display: block;
    position: absolute;
    inset-inline-start: 0;
    inset-block-start: 0;
    width: 100%;
    height: 100%;
    z-index: 2;
  }
}

/**
 * Slotted content
 * - Adjust to allow for the component click event to work normally
 */
::slotted(*) {
  position: relative;
  z-index: 3;
}

/**
 * Slotted popovers
 * - Adjust the positioning of the popover to account for control button padding
 */
::slotted(sl-popover) {
  --sl-popover-trigger-z-index: 1;
  --sl-popover-shift: #{size(-1.75)};

  .sl-c-toggle-button--background & {
    --sl-popover-offset: #{var(--sl-theme-space-lg)};
  }
}

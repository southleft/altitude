@import '../../styles/component';
/*------------------------------------*\
  #FILE-UPLOAD
\*------------------------------------*/

/**
 * File upload
 */
.sl-c-file-upload {
  display: flex;
  flex-direction: column;
  gap: var(--sl-theme-space-xs);

  /**
   * File upload disabled state
   */
  &.sl-is-disabled {
    opacity: var(--sl-theme-opacity-disabled);
    pointer-events: none;
  }
}

/**
 * File upload label
 */
.sl-c-file-upload__label {
  @include label-styles;
}

/**
 * Content inside of file upload area
 */
.sl-c-file-upload__body {
  @include sl-theme-typography-body-md;
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: var(--sl-theme-space-xs);
  padding: var(--sl-theme-space-md) size(3) var(--sl-theme-space-sm) size(3);
  text-align: center;
  border-radius: var(--sl-theme-border-radius);
  color: var(--sl-theme-color-content-default-weak);
  background-color: var(--sl-theme-color-background-transparent);
  border: var(--sl-theme-border-width) dashed var(--sl-theme-color-border-default);
  transition: background-color var(--sl-theme-animation-duration) var(--sl-theme-animation-timing), border-color var(--sl-theme-animation-duration) var(--sl-theme-animation-timing);

  /**
   * Dragging state
   */
  &:hover:not(:active, .sl-is-disabled),
  .sl-is-dragging & {
    border-color: var(--sl-theme-color-border-accent-default);
    background-color: var(--sl-theme-color-background-default);
  }
}

/**
 * File upload input
 */
.sl-c-file-upload__input {
  position: absolute;
  inset-block-start: 0;
  inset-inline-start: 0;
  width: 100%;
  height: 100%;
  cursor: pointer;
  border: none;
  z-index: 2;
  opacity: 0;
}

/**
 * File upload list
 */
.sl-c-file-upload__list {
  list-style: none;
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  gap: var(--sl-theme-space);
}

/**
 * Uploaded list item
 */
.sl-c-file-upload__item {
  display: flex;
  flex-direction: column;
  border-radius: var(--sl-theme-border-radius);
  overflow: hidden;
  --sl-icon-width: #{var(--sl-theme-icon-lg)};
  --sl-icon-height: #{var(--sl-theme-icon-lg)};
}

/**
 * Uploaded list item body
 */
.sl-c-file-upload__item-body {
  @include sl-theme-typography-body-md;
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: var(--sl-theme-space-xs);
  padding: size(0) var(--sl-theme-space-xxs) size(0) var(--sl-theme-space-sm);
  color: var(--sl-theme-color-content-default);
  background-color: var(--sl-theme-color-background-default);
}

/**
 * Uploaded list item first and second
 */
.sl-c-file-upload__item-first,
.sl-c-file-upload__item-second {
  display: flex;
  align-items: center;
  gap: var(--sl-theme-space-xs);
}

/**
 * Uploaded list item first
 */
.sl-c-file-upload__item-first {
  flex: 1;
}

/**
 * Uploaded list item second
 */
.sl-c-file-upload__item-second {
  justify-content: flex-end;
  color: var(--sl-theme-color-content-default-weak);
}

/**
 * File upload field note slotted
 * 1. Targets field notes that are added via a slot
 */
slot[name="field-note"]::slotted(*),
slot[name="error"]::slotted(*) {
  /**
   * Field note with error state
   * 1. Ensures the error styles are still applied even if a slotted field note does not have ?isError applied
   */
  .sl-is-error & {
    --sl-field-note-color: var(--sl-theme-color-border-danger-default);
  }

  /**
   * Field note with disabled state
   * 1. Ensures the disabled styles are still applied even if a slotted field note does not have ?isDisabled applied
   */
  .sl-is-disabled & {
    opacity: var(--sl-theme-opacity-disabled);
  }
}

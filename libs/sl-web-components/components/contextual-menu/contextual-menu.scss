@import '../../styles/component';
/* ------------------------------------*\
  #CONTEXTUAL-MENU
\*------------------------------------ */

:host {
  display: contents;
  --sl-contextual-menu-offset: #{var(--sl-theme-space-xxs)};
  --sl-contextual-menu-shift: 0;
}

/**
 * Panel -the main content wrapper of the header, body, and footer
 */
.sl-c-contextual-menu {
  position: relative;
  display: flex;
  width: max-content;
}

/**
 * Panel container
 */
.sl-c-contextual-menu__container {
  transition: opacity var(--sl-theme-animation-duration-long) var(--sl-theme-animation-timing), visibility var(--sl-theme-animation-duration-long) var(--sl-theme-animation-timing);
  display: flex;
  opacity: 0;
  visibility: hidden;
  width: var(--sl-contextual-menu-container-width, max-content);
  position: absolute;
  inset-inline-end: var(--sl-contextual-menu-shift);
  inset-block-start: calc(100% + var(--sl-contextual-menu-offset));
  flex-direction: column;
  gap: var(--sl-theme-space);
  padding: var(--sl-contextual-menu-container-padding, 0 0);
  border-radius: var(--sl-theme-border-radius-lg);
  box-shadow: var(--sl-theme-box-shadow-md);
  z-index: var(--sl-z-index-500);
  overflow: hidden;
  @include background-transparent;

  /**
   * Adjust the contextual menu contextual menu to be full screen
   */
  @media all and (max-width: $sl-breakpoint-sm) {
    width: 100vw;
    max-width: 100vw;
    height: 100vh;
    box-shadow: none;
    border-radius: 0;
    inset-block-start: 0;
    inset-inline-start: 0;
  }

  /**
   * Remove focus outline
   */
  &:focus-visible {
    outline: none;
  }

  /**
   * Active state for panel contextual menu
   */
  .sl-is-active & {
    opacity: 1;
    visibility: visible;
  }

  /**
   * Panel container positioned to the bottom center of the trigger
   */
  .sl-c-contextual-menu--bottom-center & {
    inset-block-start: calc(100% + var(--sl-contextual-menu-offset));
    inset-block-end: auto;
    inset-inline-start: 50%;
    inset-inline-end: auto;
    transform: translateX(var(--rtlTranslateX, -50%));
  }

  /**
   * Panel container positioned to the bottom right of the trigger
   */
  .sl-c-contextual-menu--bottom-right & {
    inset-block-start: calc(100% + var(--sl-contextual-menu-offset));
    inset-block-end: auto;
    inset-inline-start: var(--sl-contextual-menu-shift);
    inset-inline-end: auto;
  }

  /**
   * Panel container positioned to the bottom left of the trigger
   */
  .sl-c-contextual-menu--bottom-left & {
    inset-block-start: calc(100% + var(--sl-contextual-menu-offset));
    inset-block-end: auto;
    inset-inline-start: auto;
    inset-inline-end: var(--sl-contextual-menu-shift);
  }

  /**
   * Panel container positioned to the top center of the trigger
   */
  .sl-c-contextual-menu--top-center & {
    inset-block-start: auto;
    inset-block-end: calc(100% + var(--sl-contextual-menu-offset));
    inset-inline-start: 50%;
    inset-inline-end: auto;
    transform: translateX(var(--rtlTranslateX, -50%));
  }

  /**
   * Panel container positioned to the top right of the trigger
   */
  .sl-c-contextual-menu--top-right & {
    inset-block-start: auto;
    inset-block-end: calc(100% + var(--sl-contextual-menu-offset));
    inset-inline-start: var(--sl-contextual-menu-shift);
    inset-inline-end: auto;
  }

  /**
   * Panel container positioned to the top left of the trigger
   */
  .sl-c-contextual-menu--top-left & {
    inset-block-start: auto;
    inset-block-end: calc(100% + var(--sl-contextual-menu-offset));
    inset-inline-start: auto;
    inset-inline-end: var(--sl-contextual-menu-shift);
  }

  /**
   * Panel container positioned to the left of the trigger
   */
  .sl-c-contextual-menu--left & {
    inset-block-start: var(--sl-contextual-menu-shift);
    inset-block-end: auto;
    inset-inline-start: auto;
    inset-inline-end: calc(100% + var(--sl-contextual-menu-offset));
  }

  /**
   * Panel container positioned to the right of the trigger
   */
  .sl-c-contextual-menu--right & {
    inset-block-start: var(--sl-contextual-menu-shift);
    inset-block-end: auto;
    inset-inline-start: calc(100% + var(--sl-contextual-menu-offset));
    inset-inline-end: auto;
  }
}

/**
 * Panel title
 * - The container the holds the header slot and heading text
 */
.sl-c-contextual-menu__title {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: flex-start;
  gap: var(--sl-theme-space);
}

/**
 * Panel body
 * - The body/content slot in the contextual menu
 */
.sl-c-contextual-menu__body {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: var(--sl-theme-space);
}

/**
 * Panel trigger
 * - The trigger slot in the contextual menu
 */
.sl-c-contextual-menu__trigger {
  z-index: var(--sl-contextual-menu-trigger-z-index, var(--sl-z-index-400));
  display: flex;
  align-items: center;
  gap: var(--sl-theme-space-xs);
}

/**
 * Panel slotted chevron down icons
 * - See an example in the control button
 */
::slotted(sl-icon-chevron-down) {
  transition: transform var(--sl-theme-animation-duration) var(--sl-theme-animation-timing);
  transform: rotate(0);

  /**
   * Rotate the icon when the contextual menu is active
   */
  .sl-is-active & {
    transform: rotate(-180deg);
  }
}
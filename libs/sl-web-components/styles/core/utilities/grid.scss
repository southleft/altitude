/* ------------------------------------ *\
  $GRID
\* ------------------------------------ */
@use 'sass:math';

/**
 * Grid variables
 */
$grid-cols: 12 !default;

/**
 * Grid column generator mixin
 */
@mixin column-generator($suffix) {
  @for $i from 1 through $grid-cols {
    /**
     * Grid implicit column
     */
    .sl-u-grid.cols\:#{$i}\@#{$suffix} {
      grid-template-columns: repeat(math.div($grid-cols, $i), 1fr);
    }

    /**
     * Grid explicit column
     */
    .sl-u-grid__item.col\:#{$i},
    .sl-u-grid .sl-u-grid__item.col\:#{$i}\@#{$suffix} {
      grid-column: span $i / span $i;
    }

    /**
     * Grid explicit row
     */
    .sl-u-grid__item.row\:#{$i},
    .sl-u-grid .sl-u-grid__item.row\:#{$i}\@#{$suffix} {
      grid-row: span $i / span $i;
    }

    /**
     * Grid offset
     */
    .offset\:#{$i}\@#{$suffix} {
      grid-column-start: $i !important;
    }
  }
}

/**
 * Grid column generator default
 */
@include column-generator(null);

/**
 * Grid column generator for xs breakpoint
 */
@media (min-width: $sl-breakpoint-xs) {
  @include column-generator('xs');
}

/**
 * Grid column generator for sm breakpoint
 */
@media (min-width: $sl-breakpoint-sm) {
  @include column-generator('sm');
}

/**
 * Grid column generator for md breakpoint
 */
@media (min-width: $sl-breakpoint-md) {
  @include column-generator('md');
}

/**
 * Grid column generator for lg breakpoint
 */
@media (min-width: $sl-breakpoint-lg) {
  @include column-generator('lg');
}

/**
 * Grid column generator for xl breakpoint
 */
@media (min-width: $sl-breakpoint-xl) {
  @include column-generator('xl');
}

/**
 * Grid column generator for xxl breakpoint
 */
@media (min-width: $sl-breakpoint-xxl) {
  @include column-generator('xxl');
}

/**
 * Grid
 */
.sl-u-grid {
  display: grid !important;
  grid-gap: var(--sl-theme-space);
  grid-template-columns: repeat(1fr, 1fr);

  /**
   * If grid has grid item classes, then set the grid-template-columns
   */
  &:has(.sl-u-grid__item) {
    grid-template-columns: repeat($grid-cols, 1fr);
  }
}

/**
 * Grid implicit columns
 */
.sl-u-grid.cols\:\@xs,
.sl-u-grid.cols\:\@sm,
.sl-u-grid.cols\:\@md,
.sl-u-grid.cols\:\@lg,
.sl-u-grid.cols\:\@xl,
.sl-u-grid.cols\:\@xxl {
  grid-template-columns: #{$grid-cols}fr;
}

/**
 * Grid item
 */
.sl-u-grid__item {
  display: flex;
}

/**
 * Grid item explicit columns
 * - Extend full-width columns placeholder
 */
@for $i from 1 through $grid-cols {
  .sl-u-grid__item.col\:\@xs,
  .sl-u-grid__item.col\:\@sm,
  .sl-u-grid__item.col\:\@md,
  .sl-u-grid__item.col\:\@lg,
  .sl-u-grid__item.col\:\@xl,
  .sl-u-grid__item.col\:\@xxl {
    grid-column: span $grid-cols;
  }
}

/**
 * Grid alignment utility classes
 */
.sl-u-grid--align-center {
  align-items: center;
}

.sl-u-grid--align-end {
  align-items: flex-end;
}

.sl-u-grid--align-stretch {
  align-items: stretch;
}

.sl-u-grid--justify-center {
  justify-content: center;
}

.sl-u-grid--justify-end {
  justify-content: flex-end;
}

.sl-u-grid--justify-space-between {
  justify-content: space-between;
}
import { LitElement, html, unsafeCSS } from 'lit';
import { property } from 'lit/decorators.js';
import { classMap } from 'lit/directives/class-map.js';
import styles from './{{dashCase name}}.scss';

/**
 * Page: sl-l-{{dashCase name}}
 * @slot - The pages content
 */
export class SL{{pascalCase name}} extends LitElement {
  static get styles() {
    return unsafeCSS(styles.toString());
  }

  @property()
  accessor styleModifier: string;

  render() {
    const componentClassNames = classMap({
      'sl-l-{{dashCase name}}': true,
      [this.styleModifier]: !!this.styleModifier
    });

    return html`
      <div class=${componentClassNames}>
        <slot></slot>
      </div>
    `;
  }
}

if (customElements.get('sl-{{dashCase name}}') === undefined) {
  customElements.define('sl-{{dashCase name}}', SL{{pascalCase name}});
}

declare global {
  interface HTMLElementTagNameMap {
    'sl-{{dashCase name}}': SL{{pascalCase name}};
  }
}
